--- chrome/browser/resources/settings/appearance_page/appearance_page.ts.orig	2023-08-18 10:26:52 UTC
+++ chrome/browser/resources/settings/appearance_page/appearance_page.ts
@@ -64,7 +64,7 @@ export interface SettingsAppearancePageElement {
 export enum SystemTheme {
   // Either classic or web theme.
   DEFAULT = 0,
-  // <if expr="is_linux">
+  // <if expr="is_posix">
   GTK = 1,
   QT = 2,
   // </if>
@@ -156,7 +156,7 @@ export class SettingsAppearancePageElement extends
             'prefs.autogenerated.theme.policy.color.controlledBy)',
       },
 
-      // <if expr="is_linux">
+      // <if expr="is_posix">
       /**
        * Whether to show the "Custom Chrome Frame" setting.
        */
@@ -192,7 +192,7 @@ export class SettingsAppearancePageElement extends
       'themeChanged_(' +
           'prefs.extensions.theme.id.value, systemTheme_, isForcedTheme_)',
 
-      // <if expr="is_linux">
+      // <if expr="is_posix">
       'systemThemePrefChanged_(prefs.extensions.theme.system_theme.value)',
       // </if>
     ];
@@ -212,7 +212,7 @@ export class SettingsAppearancePageElement extends
   private isForcedTheme_: boolean;
   private showHoverCardImagesOption_: boolean;
 
-  // <if expr="is_linux">
+  // <if expr="is_posix">
   private showCustomChromeFrame_: boolean;
   // </if>
 
@@ -290,7 +290,7 @@ export class SettingsAppearancePageElement extends
     this.appearanceBrowserProxy_.useDefaultTheme();
   }
 
-  // <if expr="is_linux">
+  // <if expr="is_posix">
   private systemThemePrefChanged_(systemTheme: SystemTheme) {
     this.systemTheme_ = systemTheme;
   }
@@ -362,7 +362,7 @@ export class SettingsAppearancePageElement extends
       return;
     }
 
-    // <if expr="is_linux">
+    // <if expr="is_posix">
     let i18nId;
     switch (this.systemTheme_) {
       case SystemTheme.GTK:
